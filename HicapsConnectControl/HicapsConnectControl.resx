<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>